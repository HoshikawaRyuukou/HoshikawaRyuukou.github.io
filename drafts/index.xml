<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Drafts on 識之箱庭</title><link>https://HoshikawaRyuukou.github.io/drafts/</link><description>Recent content in Drafts on 識之箱庭</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><copyright>HoshikawaRyuukou</copyright><lastBuildDate>Fri, 19 Jan 2024 21:05:00 +0000</lastBuildDate><atom:link href="https://HoshikawaRyuukou.github.io/drafts/index.xml" rel="self" type="application/rss+xml"/><item><title>通用設計 - Architecture - Player Application</title><link>https://HoshikawaRyuukou.github.io/drafts/%E9%80%9A%E7%94%A8%E8%A8%AD%E8%A8%88-architecture-viper-copy/</link><pubDate>Fri, 19 Jan 2024 21:05:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/drafts/%E9%80%9A%E7%94%A8%E8%A8%AD%E8%A8%88-architecture-viper-copy/</guid><description> 以本次的應用來說 從server 接收資料並呈現 基本沒有什麼 業務邏輯 就算有也是 應用邏輯 但用 port 將 變化隔離是可行的 / fake 時也有用 對 api 的要求如果不是對應到單畫面 在 api 取回的資料比較雜的狀況下 則須考慮較全局的狀態管理</description></item></channel></rss>